Function CustomSearch(searchValue As Variant, searchColumn As Range, resultColumn As Range, _
                      Optional charLimit As Integer = 0, _
                      Optional occurrence As Integer = 0, Optional skipCount As Integer = 0, _
                      Optional multiLine As Integer = 0, _
                      Optional ignoreCharsAndSpaces As Boolean = False, Optional ignoreCase As Boolean = False, _
                      Optional includeKey As Boolean = False, _
                      Optional transposeResult As Boolean = False) As Variant
    ' Custom Search Function

    Dim currentPrecision As Integer
    Dim searchArray As Variant
    Dim resultArray As Variant
    Dim rowCount As Long
    Dim i As Long, j As Long
    Dim processedSearchValue As String
    Dim processedSearchCell As String
    Dim regex As Object
    Dim matchCount As Integer
    Dim matches As Collection
    Dim validMatchesCount As Integer
    Dim lastRow As Long
    Dim matchArray() As Variant

    On Error GoTo ErrorHandler ' Error Handling

    ' Validate input parameters
    If searchColumn.Columns.Count > 1 Then
        CustomSearch = "Error: searchColumn must be a single column."
        Exit Function
    End If
    If searchColumn.Rows.Count <> resultColumn.Rows.Count Then
        CustomSearch = "Error: searchColumn and resultColumn must have the same number of rows."
        Exit Function
    End If
    If searchColumn.Row <> resultColumn.Row Then
        CustomSearch = "Error: searchColumn and resultColumn must start from the same row."
        Exit Function
    End If
    If occurrence < 0 Then
        CustomSearch = "Error: occurrence must be a non-negative integer."
        Exit Function
    End If
    If skipCount < 0 Then
        CustomSearch = "Error: skipCount must be a non-negative integer."
        Exit Function
    End If
    If (multiLine <> 0) And (multiLine <> 1) And (multiLine <> 2) And (multiLine <> 3) Then
        CustomSearch = "Error: multiLine must be 0, 1, 2, or 3."
        Exit Function
    End If

    ' Set exact match checking for charLimit = 0 (full string match)
    If charLimit = 0 Then
        currentPrecision = Len(searchValue) ' Full string match
    Else
        currentPrecision = charLimit
    End If

    ' Initialize valid matches count
    validMatchesCount = 0

    ' Проверяем, является ли указанный диапазон столбцом или конкретным диапазоном
    If searchColumn.Rows.Count = searchColumn.Worksheet.Rows.Count Then
        ' Если передан целый столбец, находим последний заполненный ряд
        lastRow = searchColumn.Cells(searchColumn.Rows.Count, 1).End(xlUp).Row
        ' Загружаем данные в массивы
        searchArray = searchColumn.Resize(lastRow).Value
        resultArray = resultColumn.Resize(lastRow, resultColumn.Columns.Count).Value
        rowCount = lastRow
    Else
        ' Если передан конкретный диапазон, используем его размер
        rowCount = searchColumn.Rows.Count
        ' Загружаем данные в массивы
        searchArray = searchColumn.Value
        resultArray = resultColumn.Resize(rowCount, resultColumn.Columns.Count).Value
    End If

    ' Create RegExp object for character filtering
    Set regex = CreateObject("VBScript.RegExp")
    regex.Global = True
    regex.ignoreCase = True
    regex.Pattern = "[^a-zA-Z0-9]"

    ' Preprocess searchValue
    If ignoreCharsAndSpaces Then
        processedSearchValue = regex.Replace(CStr(searchValue), "")
    Else
        processedSearchValue = CStr(searchValue)
    End If

    If ignoreCase Then
        processedSearchValue = LCase(processedSearchValue)
    End If

    ' Initialize match counter and matches collection
    matchCount = 0
    Set matches = New Collection

    ' Iterate over searchColumn and look for matches
    For i = 1 To rowCount
        ' Preprocess the current cell value
        If ignoreCharsAndSpaces Then
            processedSearchCell = regex.Replace(CStr(searchArray(i, 1)), "")
        Else
            processedSearchCell = CStr(searchArray(i, 1))
        End If

        If ignoreCase Then
            processedSearchCell = LCase(processedSearchCell)
        End If

        ' Check for exact match if charLimit = 0
        If charLimit = 0 Then
            If processedSearchCell = processedSearchValue Then
                matchCount = matchCount + 1

                ' Skip matches according to skipCount
                If matchCount <= skipCount Then GoTo ContinueLoop

                ' Collect matches
                validMatchesCount = validMatchesCount + 1
                If resultColumn.Columns.Count > 1 Then
                    ReDim rowMatch(1 To resultColumn.Columns.Count)
                    For j = 1 To resultColumn.Columns.Count
                        If IsEmpty(resultArray(i, j)) Then
                            rowMatch(j) = "" ' Treat empty cells as empty strings
                        Else
                            rowMatch(j) = resultArray(i, j)
                        End If
                    Next j
                    If includeKey Then
                        matches.Add Array(searchArray(i, 1), rowMatch)
                    Else
                        matches.Add Array("", rowMatch)
                    End If
                Else
                    If IsEmpty(resultArray(i, 1)) Then
                        If includeKey Then
                            matches.Add Array(searchArray(i, 1), "")
                        Else
                            matches.Add Array("", "")
                        End If
                    Else
                        If includeKey Then
                            matches.Add Array(searchArray(i, 1), resultArray(i, 1))
                        Else
                            matches.Add Array("", resultArray(i, 1))
                        End If
                    End If
                End If

                ' Check if the required occurrence is met
                If occurrence > 0 And validMatchesCount = occurrence Then Exit For
            End If
        Else
            ' Check for partial match with current precision
            If Left(processedSearchCell, currentPrecision) = Left(processedSearchValue, currentPrecision) Then
                matchCount = matchCount + 1

                ' Skip matches according to skipCount
                If matchCount <= skipCount Then GoTo ContinueLoop

                ' Collect matches
                validMatchesCount = validMatchesCount + 1
                If resultColumn.Columns.Count > 1 Then
                    ReDim rowMatch(1 To resultColumn.Columns.Count)
                    For j = 1 To resultColumn.Columns.Count
                        If IsEmpty(resultArray(i, j)) Then
                            rowMatch(j) = "" ' Treat empty cells as empty strings
                        Else
                            rowMatch(j) = resultArray(i, j)
                        End If
                    Next j
                    If includeKey Then
                        matches.Add Array(searchArray(i, 1), rowMatch)
                    Else
                        matches.Add Array("", rowMatch)
                    End If
                Else
                    If IsEmpty(resultArray(i, 1)) Then
                        If includeKey Then
                            matches.Add Array(searchArray(i, 1), "")
                        Else
                            matches.Add Array("", "")
                        End If
                    Else
                        If includeKey Then
                            matches.Add Array(searchArray(i, 1), resultArray(i, 1))
                        Else
                            matches.Add Array("", resultArray(i, 1))
                        End If
                    End If
                End If

                ' Check if the required occurrence is met
                If occurrence > 0 And validMatchesCount = occurrence Then Exit For
            End If
        End If

ContinueLoop:
    Next i

    ' Форматирование вывода на основе multiLine
    If matches.Count > 0 Then
        Select Case multiLine
            Case 0 ' Вывод в табличном формате
                If resultColumn.Columns.Count > 1 Then
                    ' Вывод нескольких колонок
                    If includeKey Then
                        ReDim matchArray(1 To matches.Count, 1 To resultColumn.Columns.Count + 1)
                        For i = 1 To matches.Count
                            matchArray(i, 1) = matches(i)(0) ' Ключ
                            For j = 1 To resultColumn.Columns.Count
                                matchArray(i, j + 1) = matches(i)(1)(j)
                            Next j
                        Next i
                    Else
                        ReDim matchArray(1 To matches.Count, 1 To resultColumn.Columns.Count)
                        For i = 1 To matches.Count
                            For j = 1 To resultColumn.Columns.Count
                                matchArray(i, j) = matches(i)(1)(j)
                            Next j
                        Next i
                    End If
                Else
                    ' Вывод одной колонки
                    If includeKey Then
                        ReDim matchArray(1 To matches.Count, 1 To 2)
                        For i = 1 To matches.Count
                            matchArray(i, 1) = matches(i)(0) ' Ключ
                            matchArray(i, 2) = matches(i)(1)
                        Next i
                    Else
                        ReDim matchArray(1 To matches.Count, 1 To 1)
                        For i = 1 To matches.Count
                            matchArray(i, 1) = matches(i)(1)
                        Next i
                    End If
                End If

            Case 1 ' Вывод в одну колонку
                ReDim matchArray(1 To matches.Count, 1 To 1)
                For i = 1 To matches.Count
                    If resultColumn.Columns.Count > 1 Then
                        If includeKey Then
                            matchArray(i, 1) = matches(i)(0) & ": " & Join(matches(i)(1), ", ")
                        Else
                            matchArray(i, 1) = Join(matches(i)(1), ", ")
                        End If
                    Else
                        If includeKey Then
                            matchArray(i, 1) = matches(i)(0) & ": " & matches(i)(1)
                        Else
                            matchArray(i, 1) = matches(i)(1)
                        End If
                    End If
                Next i

            Case 2 ' Вывод в одну строку
                ReDim matchArray(1 To 1, 1 To matches.Count)
                For i = 1 To matches.Count
                    If resultColumn.Columns.Count > 1 Then
                        If includeKey Then
                            matchArray(1, i) = matches(i)(0) & ": " & Join(matches(i)(1), ", ")
                        Else
                            matchArray(1, i) = Join(matches(i)(1), ", ")
                        End If
                    Else
                        If includeKey Then
                            matchArray(1, i) = matches(i)(0) & ": " & matches(i)(1)
                        Else
                            matchArray(1, i) = matches(i)(1)
                        End If
                    End If
                Next i

            Case 3 ' Вывод в одну ячейку с разделением запятой, переводом строки и "; " в конце
                ReDim matchArray(1 To 1, 1 To 1)
                matchArray(1, 1) = ""
                For i = 1 To matches.Count
                    If resultColumn.Columns.Count > 1 Then
                        If includeKey Then
                            matchArray(1, 1) = matchArray(1, 1) & matches(i)(0) & ": " & Join(matches(i)(1), ", ") & "; " & vbNewLine
                        Else
                            matchArray(1, 1) = matchArray(1, 1) & Join(matches(i)(1), ", ") & "; " & vbNewLine
                        End If
                    Else
                        If includeKey Then
                            matchArray(1, 1) = matchArray(1, 1) & matches(i)(0) & ": " & matches(i)(1) & "; " & vbNewLine
                        Else
                            matchArray(1, 1) = matchArray(1, 1) & matches(i)(1) & "; " & vbNewLine
                        End If
                    End If
                Next i
                ' Удаляем последний "; " и перевод строки
                If Right(matchArray(1, 1), 4) = "; " & vbNewLine Then
                    matchArray(1, 1) = Left(matchArray(1, 1), Len(matchArray(1, 1)) - 4)
                End If
        End Select

        ' Транспонирование результата, если включено
        If transposeResult Then
            CustomSearch = Application.WorksheetFunction.Transpose(matchArray)
        Else
            CustomSearch = matchArray
        End If

    Else
        CustomSearch = "Not Found"
    End If

    Exit Function

ErrorHandler:
    CustomSearch = "Error: " & Err.Description
End Function
